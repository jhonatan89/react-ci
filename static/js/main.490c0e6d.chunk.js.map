{"version":3,"sources":["LoadingSpinner.js","ErrorMessage.js","PokemonList.js","App.js","useApi.js","reportWebVitals.js","index.js"],"names":["LoadingSpinner","className","alt","src","ErrorMessage","error","data-testid","toString","PropTypes","any","isRequired","defaultProps","PokemonList","pokemonList","map","id","name","to","style","backgroundImage","mapResults","results","url","parseInt","match","App","result","useState","data","setData","isLoading","setIsLoading","setError","useEffect","axios","get","then","response","catch","finally","useApi","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAMeA,EAJQ,kBACrB,qBAAKC,UAAU,kBAAkBC,IAAI,aAAaC,IAAI,0F,OCAlDC,EAAe,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACnB,sBAAKC,cAAY,QAAjB,+BAA4CD,EAAME,eAGpDH,EAAaI,UAAY,CACvBH,M,OAAOG,EAAUC,IAAIC,YAGvBN,EAAaO,aAAe,CAC1BN,MAAO,IAGMD,QCQAQ,EApBK,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACrB,OACE,qCACE,oBAAIZ,UAAU,QAAd,sBACA,qBAAKA,UAAU,iBAAf,SACGY,EAAYC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACf,cAAC,IAAD,CAAeC,GAAG,IAAIhB,UAAU,YAAYiB,MAAO,CAAEC,gBAAgB,OAAD,0FAAqFJ,EAArF,cAApE,SACE,qBACEd,UAAU,iBADZ,SAGGe,KAJMD,YCDfK,EAAc,SAAC,GAAD,SAAGC,QAAsBP,KAAI,gBAAGQ,EAAH,EAAGA,IAAH,MAAoB,CACnEA,MACAN,KAF+C,EAAQA,KAGvDD,GAAIQ,SAASD,EAAIE,MAAM,aAAa,SAwBvBC,MArBf,WAAgB,IAAD,ECXA,SAACH,GAA0C,IAArCF,EAAoC,uDAAvB,SAACM,GAAD,OAAYA,GAAW,EAC/BC,qBAD+B,mBAChDC,EADgD,KAC1CC,EAD0C,OAErBF,oBAAS,GAFY,mBAEhDG,EAFgD,KAErCC,EAFqC,OAG7BJ,qBAH6B,mBAGhDtB,EAHgD,KAGzC2B,EAHyC,KAavD,OATAC,qBAAU,WACRF,GAAa,GACbG,IACGC,IAAIb,GACJc,MAAK,SAAAC,GAAQ,OAAIR,EAAQT,EAAWiB,EAAST,UAC7CU,MAAMN,GACNO,SAAQ,kBAAMR,GAAa,QAC7B,CAACT,IAEG,CAAEM,OAAME,YAAWzB,SDDsBmC,CAAO,+CAAgDpB,GAAzFP,EADD,EACLe,KAAmBvB,EADd,EACcA,MAC3B,OAFa,EACqByB,UAEzB,cAAC,EAAD,IAELzB,EACK,cAAC,EAAD,CAAcA,MAAOA,IAK5B,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOoC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CAAa7B,YAAaA,WEhBrB8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBT,MAAK,YAAkD,IAA/CU,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.490c0e6d.chunk.js","sourcesContent":["import React from 'react';\n\nconst LoadingSpinner = () => (\n  <img className=\"loading-spinner\" alt=\"Loading...\" src=\"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/items/poke-ball.png\" />\n);\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ErrorMessage = ({ error }) => (\n  <div data-testid=\"error\">An error occured: {error.toString()}</div>\n);\n\nErrorMessage.PropTypes = {\n  error: PropTypes.any.isRequired\n};\n\nErrorMessage.defaultProps = {\n  error: {}\n};\n\nexport default ErrorMessage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst PokemonList = ({ pokemonList }) => {\n  return (\n    <>\n      <h1 className=\"title\">Pokemons</h1>\n      <div className=\"list-container\">\n        {pokemonList.map(({ id, name }) => (\n          <Link key={id} to=\"/\" className=\"list-item\" style={{ backgroundImage: `url(${`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${id}.png`})` }}>\n            <div\n              className=\"list-item-name\"\n            >\n              {name}\n            </div>\n          </Link>\n        ))}\n      </div>\n    </>\n  );\n};\n\n\nexport default PokemonList;\n","\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { useApi } from './useApi';\nimport LoadingSpinner from './LoadingSpinner';\nimport ErrorMessage from './ErrorMessage';\nimport PokemonList from './PokemonList';\n\n//const unused = {};\nconst mapResults = (({ results }) => results.map(({ url, name }) => ({\n  url,\n  name,\n  id: parseInt(url.match(/\\/(\\d+)\\//)[1])\n})));\n\nfunction App() {\n  const { data: pokemonList, error, isLoading } = useApi('https://pokeapi.co/api/v2/pokemon/?limit=784', mapResults);\n  if (isLoading) {\n    return <LoadingSpinner />;\n  }\n  if (error) {\n    return <ErrorMessage error={error} />;\n  }\n\n\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <PokemonList pokemonList={pokemonList} />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst useApi = (url, mapResults = (result) => result) => {\n  const [data, setData] = useState();\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState();\n  useEffect(() => {\n    setIsLoading(true);\n    axios\n      .get(url)\n      .then(response => setData(mapResults(response.data)))\n      .catch(setError)\n      .finally(() => setIsLoading(false));\n  }, [url]);\n\n  return { data, isLoading, error };\n};\n\nexport { useApi };\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n//const unusedIndex = \"ISIS3710\"\n//console.log('RenderISIS3710')\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}